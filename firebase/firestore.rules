rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // More permissive rules for production deployment
    function isAuthed() {
      return request.auth != null;
    }

    // Allow anonymous users for production compatibility
    function isAuthedOrAnonymous() {
      return request.auth != null || request.auth == null;
    }

    // Patients collection
    match /patients/{patientId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Ambulance dispatch history
    match /ambulanceDispatch/{dispatchId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Ambulance dispatches collection (for real-time listeners)
    match /ambulanceDispatches/{docId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Ambulance availability collection (for real-time listeners)
    match /ambulanceAvailability/{docId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Ambulance resource pool
    match /ambulanceResources/{resourceId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Receptionist login tracking
    match /receptionistLogins/{loginId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Resource documents and hospital meta
    match /resources/{docId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Allocations
    match /allocations/{allocId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Doctors collection
    match /doctors/{doctorId} {
      allow read, write: if isAuthedOrAnonymous();
    }

    // Default: allow everything for production compatibility
    match /{document=**} {
      allow read, write: if true;
    }
  }
}


